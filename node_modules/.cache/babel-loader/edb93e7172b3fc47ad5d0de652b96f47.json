{"ast":null,"code":"// Utilities\nimport { getCurrentInstance, IN_BROWSER, propsFactory } from \"../util/index.mjs\";\nimport { computed, nextTick, onScopeDispose, resolveDynamicComponent, toRef } from 'vue'; // Types\n\nexport function useRoute() {\n  const vm = getCurrentInstance('useRoute');\n  return computed(() => {\n    var _vm$proxy;\n    return vm == null ? void 0 : (_vm$proxy = vm.proxy) == null ? void 0 : _vm$proxy.$route;\n  });\n}\nexport function useRouter() {\n  var _getCurrentInstance, _getCurrentInstance$p;\n  return (_getCurrentInstance = getCurrentInstance('useRouter')) == null ? void 0 : (_getCurrentInstance$p = _getCurrentInstance.proxy) == null ? void 0 : _getCurrentInstance$p.$router;\n}\nexport function useLink(props, attrs) {\n  const RouterLink = resolveDynamicComponent('RouterLink');\n  const isLink = computed(() => !!(props.href || props.to));\n  const isClickable = computed(() => {\n    return (isLink == null ? void 0 : isLink.value) || !!(attrs.onClick || attrs.onClickOnce);\n  });\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href')\n    };\n  }\n  const link = props.to ? RouterLink.useLink(props) : undefined;\n  return {\n    isLink,\n    isClickable,\n    route: link == null ? void 0 : link.route,\n    navigate: link == null ? void 0 : link.navigate,\n    isActive: link && computed(() => {\n      var _link$isExactActive, _link$isActive;\n      return props.exact ? (_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value : (_link$isActive = link.isActive) == null ? void 0 : _link$isActive.value;\n    }),\n    href: computed(() => props.to ? link == null ? void 0 : link.route.value.href : props.href)\n  };\n}\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object],\n  exact: Boolean\n}, 'router');\nlet inTransition = false;\nexport function useBackButton(router, cb) {\n  let popped = false;\n  let removeBefore;\n  let removeAfter;\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate);\n      removeBefore = router == null ? void 0 : router.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next());\n        } else {\n          popped ? cb(next) : next();\n        }\n        inTransition = true;\n      });\n      removeAfter = router == null ? void 0 : router.afterEach(() => {\n        inTransition = false;\n      });\n    });\n    onScopeDispose(() => {\n      var _removeBefore, _removeAfter;\n      window.removeEventListener('popstate', onPopstate);\n      (_removeBefore = removeBefore) == null ? void 0 : _removeBefore();\n      (_removeAfter = removeAfter) == null ? void 0 : _removeAfter();\n    });\n  }\n  function onPopstate(e) {\n    var _e$state;\n    if ((_e$state = e.state) != null && _e$state.replaced) return;\n    popped = true;\n    setTimeout(() => popped = false);\n  }\n}","map":{"version":3,"mappings":"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","names":["getCurrentInstance","IN_BROWSER","propsFactory","computed","nextTick","onScopeDispose","resolveDynamicComponent","toRef","useRoute","vm","proxy","_vm$proxy","$route","useRouter","_getCurrentInstance","_getCurrentInstance$p","$router","useLink","props","attrs","RouterLink","isLink","href","to","isClickable","value","onClick","onClickOnce","link","undefined","route","navigate","isActive","exact","isExactActive","_link$isExactActive","_link$isActive","makeRouterProps","String","replace","Boolean","Object","inTransition","useBackButton","router","cb","popped","removeBefore","removeAfter","window","addEventListener","onPopstate","beforeEach","from","next","setTimeout","afterEach","removeEventListener","e","state","_e$state","replaced"],"sources":["../../src/composables/router.tsx"],"sourcesContent":["// Utilities\nimport { getCurrentInstance, IN_BROWSER, propsFactory } from '@/util'\nimport {\n  computed,\n  nextTick,\n  onScopeDispose,\n  resolveDynamicComponent,\n  toRef,\n} from 'vue'\n\n// Types\nimport type { ComputedRef, PropType, Ref, SetupContext } from 'vue'\nimport type {\n  RouterLink as _RouterLink,\n  useLink as _useLink,\n  NavigationGuardNext,\n  RouteLocationNormalizedLoaded,\n  RouteLocationRaw,\n  Router,\n  UseLinkOptions,\n} from 'vue-router'\n\nexport function useRoute (): Ref<RouteLocationNormalizedLoaded | undefined> {\n  const vm = getCurrentInstance('useRoute')\n\n  return computed(() => vm?.proxy?.$route)\n}\n\nexport function useRouter (): Router | undefined {\n  return getCurrentInstance('useRouter')?.proxy?.$router\n}\n\nexport interface LinkProps {\n  href: string | undefined\n  replace: boolean | undefined\n  to: RouteLocationRaw | undefined\n  exact: boolean | undefined\n}\n\nexport interface UseLink extends Omit<Partial<ReturnType<typeof _useLink>>, 'href'> {\n  isLink: ComputedRef<boolean>\n  isClickable: ComputedRef<boolean>\n  href: Ref<string | undefined>\n}\n\nexport function useLink (props: LinkProps, attrs: SetupContext['attrs']): UseLink {\n  const RouterLink = resolveDynamicComponent('RouterLink') as typeof _RouterLink | string\n\n  const isLink = computed(() => !!(props.href || props.to))\n  const isClickable = computed(() => {\n    return isLink?.value || !!(attrs.onClick || attrs.onClickOnce)\n  })\n\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href'),\n    }\n  }\n\n  const link = props.to ? RouterLink.useLink(props as UseLinkOptions) : undefined\n\n  return {\n    isLink,\n    isClickable,\n    route: link?.route,\n    navigate: link?.navigate,\n    isActive: link && computed(() => props.exact ? link.isExactActive?.value : link.isActive?.value),\n    href: computed(() => props.to ? link?.route.value.href : props.href),\n  }\n}\n\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object] as PropType<RouteLocationRaw>,\n  exact: Boolean,\n}, 'router')\n\nlet inTransition = false\nexport function useBackButton (router: Router | undefined, cb: (next: NavigationGuardNext) => void) {\n  let popped = false\n  let removeBefore: (() => void) | undefined\n  let removeAfter: (() => void) | undefined\n\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate)\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next())\n        } else {\n          popped ? cb(next) : next()\n        }\n        inTransition = true\n      })\n      removeAfter = router?.afterEach(() => {\n        inTransition = false\n      })\n    })\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate)\n      removeBefore?.()\n      removeAfter?.()\n    })\n  }\n\n  function onPopstate (e: PopStateEvent) {\n    if (e.state?.replaced) return\n\n    popped = true\n    setTimeout(() => (popped = false))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}