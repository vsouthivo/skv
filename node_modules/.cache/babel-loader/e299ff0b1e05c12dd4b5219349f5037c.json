{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBtn.css\"; // Components\n\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined\n    },\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    block: Boolean,\n    stacked: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'button'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isActive = computed(() => {\n      var _link$isActive;\n      return props.active !== false && (props.active || ((_link$isActive = link.isActive) == null ? void 0 : _link$isActive.value) || (group == null ? void 0 : group.isSelected.value));\n    });\n    const isDisabled = computed(() => (group == null ? void 0 : group.disabled.value) || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border);\n    });\n    useSelectLink(link, group == null ? void 0 : group.select);\n    useRender(() => {\n      var _slots$prepend, _slots$default, _slots$append, _slots$loader;\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !group || group.isSelected.value;\n      const hasPrepend = !!(props.prependIcon || slots.prepend);\n      const hasAppend = !!(props.appendIcon || slots.append);\n      const hasIcon = !!(props.icon && props.icon !== true);\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group == null ? void 0 : group.selectedClass.value, {\n          'v-btn--active': isActive.value,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--loading': props.loading,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, locationStyles.value, sizeStyles.value],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": e => {\n          var _link$navigate;\n          if (isDisabled.value) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          group == null ? void 0 : group.toggle();\n        }\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.prependIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__prepend\"\n          }, [((_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)) ?? _createVNode(VIcon, null, null)])]\n        }), _createVNode(\"span\", {\n          \"class\": \"v-btn__content\",\n          \"data-no-activator\": \"\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"key\": \"content\",\n          \"defaults\": {\n            VIcon: {\n              icon: hasIcon ? props.icon : undefined\n            }\n          }\n        }, {\n          default: () => [((_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)) ?? (hasIcon && _createVNode(VIcon, {\n            \"key\": \"icon\"\n          }, null))]\n        })]), !props.icon && hasAppend && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.appendIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__append\"\n          }, [((_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)) ?? _createVNode(VIcon, null, null)])]\n        }), !!props.loading && _createVNode(\"span\", {\n          \"key\": \"loader\",\n          \"class\": \"v-btn__loader\"\n        }, [((_slots$loader = slots.loader) == null ? void 0 : _slots$loader.call(slots)) ?? _createVNode(VProgressCircular, {\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n          \"indeterminate\": true,\n          \"size\": \"23\",\n          \"width\": \"2\"\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VBtnToggleSymbol","VDefaultsProvider","VIcon","VProgressCircular","Ripple","genOverlays","makeVariantProps","useVariant","IconValue","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeLoaderProps","useLoader","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useSelectLink","computed","defineComponent","useRender","VBtn","name","directives","props","active","type","Boolean","default","undefined","symbol","flat","icon","String","Function","Object","prependIcon","appendIcon","block","stacked","ripple","tag","variant","emits","val","setup","attrs","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","sizeClasses","sizeStyles","group","link","isActive","_link$isActive","value","isSelected","isDisabled","disabled","isElevated","border","select","Tag","isLink","hasColor","hasPrepend","prepend","hasAppend","append","hasIcon","selectedClass","loading","href","e","navigate","toggle","loader"],"sources":["../../../src/components/VBtn/VBtn.tsx"],"sourcesContent":["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined,\n    },\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'elevated' } as const),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n\n    const isActive = computed(() =>\n      props.active !== false &&\n      (props.active || link.isActive?.value || group?.isSelected.value)\n    )\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !group || group.isSelected.value\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n      const hasIcon = !!(props.icon && props.icon !== true)\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': isActive.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n            sizeStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VIcon: {\n                  icon: props.prependIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__prepend\">\n                { slots.prepend?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            <VDefaultsProvider\n              key=\"content\"\n              defaults={{\n                VIcon: {\n                  icon: hasIcon ? props.icon : undefined,\n                },\n              }}\n            >\n              { slots.default?.() ?? (\n                hasIcon && (\n                  <VIcon key=\"icon\" />\n                )\n              ) }\n            </VDefaultsProvider>\n          </span>\n\n          { !props.icon && hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VIcon: {\n                  icon: props.appendIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__append\">\n                { slots.append?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"23\"\n                  width=\"2\"\n                />\n              ) }\n            </span>\n          ) }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n"]},"metadata":{},"sourceType":"module"}