{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { toRef } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nexport const VListSubheader = defineComponent({\n  name: 'VListSubheader',\n  props: {\n    color: String,\n    inset: Boolean,\n    sticky: Boolean,\n    title: String,\n    ...makeTagProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    useRender(() => {\n      var _slots$default;\n      const hasText = !!(slots.default || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-subheader', {\n          'v-list-subheader--inset': props.inset,\n          'v-list-subheader--sticky': props.sticky\n        }, textColorClasses.value],\n        \"style\": {\n          textColorStyles\n        }\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-list-subheader__text\"\n        }, [((_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)) ?? props.title])]\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":";AAAA;SACSA,Y;SACAC,Y,uCAET;;AACA,SAASC,KAAT,QAAsB,KAAtB;SACSC,e,EAAiBC,S;AAE1B,OAAO,MAAMC,cAAc,GAAGF,eAAe,CAAC;EAC5CG,IAAI,EAAE,gBADsC;EAG5CC,KAAK,EAAE;IACLC,KAAK,EAAEC,MADF;IAELC,KAAK,EAAEC,OAFF;IAGLC,MAAM,EAAED,OAHH;IAILE,KAAK,EAAEJ,MAJF;IAML,GAAGT,YAAY;EANV,CAHqC;EAY5Cc,KAAK,CAAEP,KAAF,QAAoB;IAAA,IAAX;MAAEQ;IAAF,CAAW;IACvB,MAAM;MAAEC,gBAAF;MAAoBC;IAApB,IAAwChB,YAAY,CAACC,KAAK,CAACK,KAAD,EAAQ,OAAR,CAAN,CAA1D;IAEAH,SAAS,CAAC,MAAM;MAAA;MACd,MAAMc,OAAO,GAAG,CAAC,EAAEH,KAAK,CAACI,OAAN,IAAiBZ,KAAK,CAACM,KAAzB,CAAjB;MAEA;QAAA,SAEW,CACL,kBADK,EAEL;UACE,2BAA2BN,KAAK,CAACG,KADnC;UAEE,4BAA4BH,KAAK,CAACK;QAFpC,CAFK,EAMLI,gBAAgB,CAACI,KANZ,CAFX;QAAA,SAUW;UAAEH;QAAF;MAVX;QAAAE,gBAYMD,OAAO;UAAA,SACI;QADJ,IAEH,wBAAK,CAACC,OAAN,8CAAK,MAAgBZ,KAAK,CAACM,KAFxB,EAZb;MAAA;IAmBD,CAtBQ,CAAT;IAwBA,OAAO,EAAP;EACD;AAxC2C,CAAD,CAAtC","names":["makeTagProps","useTextColor","toRef","defineComponent","useRender","VListSubheader","name","props","color","String","inset","Boolean","sticky","title","setup","slots","textColorClasses","textColorStyles","hasText","default","value"],"sources":["../../../src/components/VList/VListSubheader.tsx"],"sourcesContent":["// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VListSubheader = defineComponent({\n  name: 'VListSubheader',\n\n  props: {\n    color: String,\n    inset: Boolean,\n    sticky: Boolean,\n    title: String,\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const hasText = !!(slots.default || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-list-subheader',\n            {\n              'v-list-subheader--inset': props.inset,\n              'v-list-subheader--sticky': props.sticky,\n            },\n            textColorClasses.value,\n          ]}\n          style={{ textColorStyles }}\n        >\n          { hasText && (\n            <div class=\"v-list-subheader__text\">\n              { slots.default?.() ?? props.title }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n"]},"metadata":{},"sourceType":"module"}