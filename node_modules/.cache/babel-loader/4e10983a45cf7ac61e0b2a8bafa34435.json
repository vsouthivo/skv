{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VIcon.css\"; // Composables\n\nimport { IconValue, useIcon } from \"../../composables/icons.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'i'\n  }),\n  ...makeThemeProps()\n}, 'v-icon');\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n  props: makeVIconProps(),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    let slotIcon;\n    if (slots.default) {\n      slotIcon = computed(() => {\n        var _slots$default, _flattenFragments$fil;\n        const slot = (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots);\n        if (!slot) return;\n        return (_flattenFragments$fil = flattenFragments(slot).filter(node => node.children && typeof node.children === 'string')[0]) == null ? void 0 : _flattenFragments$fil.children;\n      });\n    }\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      iconData\n    } = useIcon(slotIcon || props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    useRender(() => _createVNode(iconData.value.component, {\n      \"tag\": props.tag,\n      \"icon\": iconData.value.icon,\n      \"class\": ['v-icon', 'notranslate', themeClasses.value, sizeClasses.value, textColorClasses.value, {\n        'v-icon--clickable': !!attrs.onClick,\n        'v-icon--start': props.start,\n        'v-icon--end': props.end\n      }],\n      \"style\": [!sizeClasses.value ? {\n        fontSize: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n        width: convertToUnit(props.size)\n      } : undefined, textColorStyles.value],\n      \"role\": attrs.onClick ? 'button' : undefined,\n      \"aria-hidden\": !attrs.onClick\n    }, null));\n    return {};\n  }\n});","map":{"version":3,"mappings":";AAAA;AACA,qB,CAEA;;SACSA,S,EAAWC,O;SACXC,a,EAAeC,O;SACfC,Y;SACAC,c,EAAgBC,Y;SAChBC,Y,uCAET;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,a,EAAeC,e,EAAiBC,gB,EAAkBC,Y,EAAcC,S,gCAEzE;;AAGA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC;EACzCG,KAAK,EAAEC,MADkC;EAEzCC,KAAK,EAAEC,OAFkC;EAGzCC,GAAG,EAAED,OAHoC;EAIzCE,IAAI,EAAErB,SAJmC;EAMzC,GAAGE,aAAa,EANyB;EAOzC,GAAGE,YAAY,CAAC;IAAEkB,GAAG,EAAE;EAAP,CAAD,CAP0B;EAQzC,GAAGjB,cAAc;AARwB,CAAD,EASvC,QATuC,CAAnC;AAWP,OAAO,MAAMkB,KAAK,GAAGZ,eAAe,CAAC;EACnCa,IAAI,EAAE,OAD6B;EAGnCC,KAAK,EAAEV,cAAc,EAHc;EAKnCW,KAAK,CAAED,KAAF,QAA2B;IAAA,IAAlB;MAAEE,KAAF;MAASC;IAAT,CAAkB;IAC9B,IAAIC,QAAJ;IACA,IAAID,KAAK,CAACE,OAAV,EAAmB;MACjBD,QAAQ,GAAGrB,QAAQ,CAAC,MAAM;QAAA;QACxB,MAAMuB,IAAI,qBAAGH,KAAK,CAACE,OAAT,qBAAGE,yBAAK,CAAlB;QACA,IAAI,CAACD,IAAL,EAAW;QAEX,gCAAOnB,gBAAgB,CAACmB,IAAD,CAAhB,CAAuBE,MAAvB,CAA8BC,IAAI,IACvCA,IAAI,CAACC,QAAL,IAAiB,OAAOD,IAAI,CAACC,QAAZ,KAAyB,QADrC,EAEL,CAFK,CAAP,qBAAOC,sBAEDD,QAFN;MAGD,CAPkB,CAAnB;IAQD;IAED,MAAM;MAAEE;IAAF,IAAmB/B,YAAY,CAACmB,KAAD,CAArC;IACA,MAAM;MAAEa;IAAF,IAAerC,OAAO,CAAC4B,QAAQ,IAAIJ,KAAb,CAA5B;IACA,MAAM;MAAEc;IAAF,IAAkBpC,OAAO,CAACsB,KAAD,CAA/B;IACA,MAAM;MAAEe,gBAAF;MAAoBC;IAApB,IAAwClC,YAAY,CAACE,KAAK,CAACgB,KAAD,EAAQ,OAAR,CAAN,CAA1D;IAEAX,SAAS,CAAC;MAAA,OAEAW,KAAK,CAACH,GAFN;MAAA,QAGCgB,QAAQ,CAACI,KAAT,CAAerB,IAHhB;MAAA,SAIC,CACL,QADK,EAEL,aAFK,EAGLgB,YAAY,CAACK,KAHR,EAILH,WAAW,CAACG,KAJP,EAKLF,gBAAgB,CAACE,KALZ,EAML;QACE,qBAAqB,CAAC,CAACf,KAAK,CAACgB,OAD/B;QAEE,iBAAiBlB,KAAK,CAACP,KAFzB;QAGE,eAAeO,KAAK,CAACL;MAHvB,CANK,CAJD;MAAA,SAgBC,CACL,CAACmB,WAAW,CAACG,KAAb,GAAsB;QACpBE,QAAQ,EAAElC,aAAa,CAACe,KAAK,CAACoB,IAAP,CADH;QAEpBC,MAAM,EAAEpC,aAAa,CAACe,KAAK,CAACoB,IAAP,CAFD;QAGpBE,KAAK,EAAErC,aAAa,CAACe,KAAK,CAACoB,IAAP;MAHA,CAAtB,GAIKG,SALA,EAMLP,eAAe,CAACC,KANX,CAhBD;MAAA,QAwBCf,KAAK,CAACgB,OAAN,GAAgB,QAAhB,GAA2BK,SAxB5B;MAAA,eAyBQ,CAACrB,KAAK,CAACgB;IAzBf,QAAD,CAAT;IA6BA,OAAO,EAAP;EACD;AArDkC,CAAD,CAA7B","names":["IconValue","useIcon","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useTextColor","computed","toRef","convertToUnit","defineComponent","flattenFragments","propsFactory","useRender","makeVIconProps","color","String","start","Boolean","end","icon","tag","VIcon","name","props","setup","attrs","slots","slotIcon","default","slot","_slots$default","filter","node","children","_flattenFragments$fil","themeClasses","iconData","sizeClasses","textColorClasses","textColorStyles","value","onClick","fontSize","size","height","width","undefined"],"sources":["../../../src/components/VIcon/VIcon.tsx"],"sourcesContent":["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { IconValue, useIcon } from '@/composables/icons'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef } from 'vue'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'v-icon')\n\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { attrs, slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => (\n      <iconData.value.component\n        tag={ props.tag }\n        icon={ iconData.value.icon }\n        class={[\n          'v-icon',\n          'notranslate',\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n          {\n            'v-icon--clickable': !!attrs.onClick,\n            'v-icon--start': props.start,\n            'v-icon--end': props.end,\n          },\n        ]}\n        style={[\n          !sizeClasses.value ? ({\n            fontSize: convertToUnit(props.size),\n            height: convertToUnit(props.size),\n            width: convertToUnit(props.size),\n          }) : undefined,\n          textColorStyles.value,\n        ]}\n        role={ attrs.onClick ? 'button' : undefined }\n        aria-hidden={ !attrs.onClick }\n      />\n    ))\n\n    return {}\n  },\n})\n"]},"metadata":{},"sourceType":"module"}