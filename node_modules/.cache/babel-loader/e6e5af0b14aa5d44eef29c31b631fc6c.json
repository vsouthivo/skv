{"ast":null,"code":"// Locales\nimport en from \"../locale/en.mjs\"; // Composables\n\nimport { createRtl, RtlSymbol } from \"./rtl.mjs\"; // Utilities\n\nimport { computed, inject, provide, ref } from 'vue';\nimport { consoleError, consoleWarn, getObjectValueByPath } from \"../util/index.mjs\"; // Types\n\nexport const LocaleAdapterSymbol = Symbol.for('vuetify:locale-adapter');\nexport const VuetifyLocaleSymbol = Symbol.for('vuetify:locale');\nexport function provideLocale(props) {\n  const adapter = inject(LocaleAdapterSymbol);\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter');\n  return adapter.createScope(props);\n}\nexport function useLocale() {\n  const adapter = inject(LocaleAdapterSymbol);\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter');\n  return adapter.getScope();\n}\nfunction isLocaleAdapter(x) {\n  return !!x && x.hasOwnProperty('getScope') && x.hasOwnProperty('createScope') && x.hasOwnProperty('createRoot');\n}\nexport function createLocale(app, options) {\n  const adapter = isLocaleAdapter(options) ? options : createDefaultLocaleAdapter(options);\n  function install(app) {\n    const instance = adapter.createRoot(app);\n    app.provide(RtlSymbol, createRtl(instance, options));\n  }\n  return {\n    adapter,\n    install\n  };\n}\nconst LANG_PREFIX = '$vuetify.';\nconst replace = (str, params) => {\n  return str.replace(/\\{(\\d+)\\}/g, (match, index) => {\n    /* istanbul ignore next */\n    return String(params[+index]);\n  });\n};\nconst createTranslateFunction = (current, fallback, messages) => {\n  return function (key) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    if (!key.startsWith(LANG_PREFIX)) {\n      return replace(key, params);\n    }\n    const shortKey = key.replace(LANG_PREFIX, '');\n    const currentLocale = current.value && messages.value[current.value];\n    const fallbackLocale = fallback.value && messages.value[fallback.value];\n    let str = getObjectValueByPath(currentLocale, shortKey, null);\n    if (!str) {\n      consoleWarn(`Translation key \"${key}\" not found in \"${current.value}\", trying fallback locale`);\n      str = getObjectValueByPath(fallbackLocale, shortKey, null);\n    }\n    if (!str) {\n      consoleError(`Translation key \"${key}\" not found in fallback`);\n      str = key;\n    }\n    if (typeof str !== 'string') {\n      consoleError(`Translation key \"${key}\" has a non-string value`);\n      str = key;\n    }\n    return replace(str, params);\n  };\n};\nfunction createNumberFunction(current, fallback) {\n  return (value, options) => {\n    const numberFormat = new Intl.NumberFormat([current.value, fallback.value], options);\n    return numberFormat.format(value);\n  };\n}\nexport function createDefaultLocaleAdapter(options) {\n  const createScope = options => {\n    const current = ref(options.current);\n    const fallback = ref(options.fallback);\n    const messages = ref(options.messages);\n    return {\n      current,\n      fallback,\n      messages,\n      t: createTranslateFunction(current, fallback, messages),\n      n: createNumberFunction(current, fallback)\n    };\n  };\n  return {\n    createRoot: app => {\n      const rootScope = createScope({\n        current: (options == null ? void 0 : options.defaultLocale) ?? 'en',\n        fallback: (options == null ? void 0 : options.fallbackLocale) ?? 'en',\n        messages: (options == null ? void 0 : options.messages) ?? {\n          en\n        }\n      });\n      if (!app) throw new Error('[Vuetify] Could not find default app instance');\n      app.provide(VuetifyLocaleSymbol, rootScope);\n      return rootScope;\n    },\n    getScope: () => {\n      const currentScope = inject(VuetifyLocaleSymbol);\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance');\n      return currentScope;\n    },\n    createScope: options => {\n      const currentScope = inject(VuetifyLocaleSymbol);\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance');\n      const newScope = createScope({\n        current: computed(() => (options == null ? void 0 : options.locale) ?? currentScope.current.value),\n        fallback: computed(() => (options == null ? void 0 : options.locale) ?? currentScope.fallback.value),\n        messages: computed(() => (options == null ? void 0 : options.messages) ?? currentScope.messages.value)\n      });\n      provide(VuetifyLocaleSymbol, newScope);\n      return newScope;\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["en","createRtl","RtlSymbol","computed","inject","provide","ref","consoleError","consoleWarn","getObjectValueByPath","LocaleAdapterSymbol","Symbol","for","VuetifyLocaleSymbol","provideLocale","props","adapter","Error","createScope","useLocale","getScope","isLocaleAdapter","x","hasOwnProperty","createLocale","app","options","createDefaultLocaleAdapter","install","instance","createRoot","LANG_PREFIX","replace","str","params","match","index","String","createTranslateFunction","current","fallback","messages","key","startsWith","shortKey","currentLocale","value","fallbackLocale","createNumberFunction","numberFormat","Intl","NumberFormat","format","t","n","rootScope","defaultLocale","currentScope","newScope","locale"],"sources":["../../src/composables/locale.ts"],"sourcesContent":["// Locales\nimport en from '@/locale/en'\n\n// Composables\nimport { createRtl, RtlSymbol } from '@/composables/rtl'\n\n// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { consoleError, consoleWarn, getObjectValueByPath } from '@/util'\n\n// Types\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { App, InjectionKey, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport interface LocaleMessages {\n  [key: string]: LocaleMessages | string\n}\n\nexport interface LocaleOptions {\n  defaultLocale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleProps {\n  locale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleInstance {\n  current: Ref<string>\n  fallback: Ref<string>\n  messages: Ref<LocaleMessages>\n  t: (key: string, ...params: unknown[]) => string\n  n: (value: number) => string\n}\n\nexport interface LocaleAdapter {\n  createRoot: (app?: App) => LocaleInstance\n  getScope: () => LocaleInstance\n  createScope: (options?: LocaleProps) => LocaleInstance\n}\n\nexport const LocaleAdapterSymbol: InjectionKey<LocaleAdapter> = Symbol.for('vuetify:locale-adapter')\nexport const VuetifyLocaleSymbol: InjectionKey<LocaleInstance> = Symbol.for('vuetify:locale')\n\nexport function provideLocale (props?: LocaleProps) {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.createScope(props)\n}\n\nexport function useLocale () {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.getScope()\n}\n\nfunction isLocaleAdapter (x: any): x is LocaleAdapter {\n  return !!x && x.hasOwnProperty('getScope') && x.hasOwnProperty('createScope') && x.hasOwnProperty('createRoot')\n}\n\nexport function createLocale (\n  app: App,\n  options?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions),\n) {\n  const adapter = isLocaleAdapter(options) ? options : createDefaultLocaleAdapter(options)\n\n  function install (app: App) {\n    const instance = adapter.createRoot(app)\n    app.provide(RtlSymbol, createRtl(instance, options))\n  }\n\n  return { adapter, install }\n}\n\nconst LANG_PREFIX = '$vuetify.'\n\nconst replace = (str: string, params: unknown[]) => {\n  return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n    /* istanbul ignore next */\n    return String(params[+index])\n  })\n}\n\nconst createTranslateFunction = (\n  current: Ref<string>,\n  fallback: Ref<string>,\n  messages: Ref<LocaleMessages>,\n) => {\n  return (key: string, ...params: unknown[]) => {\n    if (!key.startsWith(LANG_PREFIX)) {\n      return replace(key, params)\n    }\n\n    const shortKey = key.replace(LANG_PREFIX, '')\n    const currentLocale = current.value && messages.value[current.value]\n    const fallbackLocale = fallback.value && messages.value[fallback.value]\n\n    let str: string = getObjectValueByPath(currentLocale, shortKey, null)\n\n    if (!str) {\n      consoleWarn(`Translation key \"${key}\" not found in \"${current.value}\", trying fallback locale`)\n      str = getObjectValueByPath(fallbackLocale, shortKey, null)\n    }\n\n    if (!str) {\n      consoleError(`Translation key \"${key}\" not found in fallback`)\n      str = key\n    }\n\n    if (typeof str !== 'string') {\n      consoleError(`Translation key \"${key}\" has a non-string value`)\n      str = key\n    }\n\n    return replace(str, params)\n  }\n}\n\nfunction createNumberFunction (current: Ref<string>, fallback: Ref<string>) {\n  return (value: number, options?: Intl.NumberFormatOptions) => {\n    const numberFormat = new Intl.NumberFormat([current.value, fallback.value], options)\n\n    return numberFormat.format(value)\n  }\n}\n\nexport function createDefaultLocaleAdapter (options?: LocaleOptions): LocaleAdapter {\n  const createScope = (options: {\n    current: MaybeRef<string>\n    fallback: MaybeRef<string>\n    messages: MaybeRef<LocaleMessages>\n  }) => {\n    const current = ref(options.current)\n    const fallback = ref(options.fallback)\n    const messages = ref(options.messages)\n\n    return {\n      current,\n      fallback,\n      messages,\n      t: createTranslateFunction(current, fallback, messages),\n      n: createNumberFunction(current, fallback),\n    }\n  }\n\n  return {\n    createRoot: app => {\n      const rootScope = createScope({\n        current: options?.defaultLocale ?? 'en',\n        fallback: options?.fallbackLocale ?? 'en',\n        messages: options?.messages ?? { en },\n      })\n\n      if (!app) throw new Error('[Vuetify] Could not find default app instance')\n\n      app.provide(VuetifyLocaleSymbol, rootScope)\n\n      return rootScope\n    },\n    getScope: () => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      return currentScope\n    },\n    createScope: options => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      const newScope = createScope({\n        current: computed(() => options?.locale ?? currentScope.current.value),\n        fallback: computed(() => options?.locale ?? currentScope.fallback.value),\n        messages: computed(() => options?.messages ?? currentScope.messages.value),\n      })\n\n      provide(VuetifyLocaleSymbol, newScope)\n\n      return newScope\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}