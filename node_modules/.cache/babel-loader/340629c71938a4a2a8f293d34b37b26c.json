{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n\n/* eslint-disable complexity */\n// Styles\nimport \"./VCard.css\"; // Components\n\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nimport { computed } from 'vue';\nexport const VCard = defineComponent({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      var _slots$image, _slots$text, _slots$default;\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"href\": link.href.value,\n        \"onClick\": isClickable.value && link.navigate\n      }, {\n        default: () => [hasImage && _createVNode(VDefaultsProvider, {\n          \"key\": \"image\",\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-card__image\"\n          }, [((_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots)) ?? _createVNode(VImg, null, null)])]\n        }), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [((_slots$text = slots.text) == null ? void 0 : _slots$text.call(slots)) ?? props.text]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value]]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VCardActions","VCardItem","VCardText","VDefaultsProvider","VImg","Ripple","genOverlays","makeVariantProps","useVariant","IconValue","LoaderSlot","makeLoaderProps","useLoader","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","defineComponent","useRender","computed","VCard","name","directives","props","appendAvatar","String","appendIcon","disabled","Boolean","flat","hover","image","link","type","default","undefined","prependAvatar","prependIcon","ripple","subtitle","text","title","variant","setup","attrs","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","isLink","value","isClickable","Tag","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","hasImage","hasCardItem","hasText","href","navigate","cover","src","loading","loader","item","_slots$default","actions"],"sources":["../../../src/components/VCard/VCard.tsx"],"sourcesContent":["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VCardActions } from './VCardActions'\nimport { VCardItem } from './VCardItem'\nimport { VCardText } from './VCardText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\nimport { computed } from 'vue'\n\nexport const VCard = defineComponent({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: {\n      type: Boolean,\n      default: undefined,\n    },\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({ variant: 'elevated' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value)\n    )\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle)\n      const hasHeader = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasCardItem = hasHeader || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          href={ link.href.value }\n          onClick={ isClickable.value && link.navigate }\n          v-ripple={ isClickable.value }\n        >\n          { hasImage && (\n            <VDefaultsProvider\n              key=\"image\"\n              defaults={{\n                VImg: {\n                  cover: true,\n                  src: props.image,\n                },\n              }}\n            >\n              <div class=\"v-card__image\">\n                { slots.image?.() ?? <VImg /> }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <LoaderSlot\n            name=\"v-card\"\n            active={ !!props.loading }\n            color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasCardItem && (\n            <VCardItem\n              key=\"item\"\n              prependAvatar={ props.prependAvatar }\n              prependIcon={ props.prependIcon }\n              title={ props.title }\n              subtitle={ props.subtitle }\n              appendAvatar={ props.appendAvatar }\n              appendIcon={ props.appendIcon }\n            >\n              {{\n                default: slots.item,\n                prepend: slots.prepend,\n                title: slots.title,\n                subtitle: slots.subtitle,\n                append: slots.append,\n              }}\n            </VCardItem>\n          ) }\n\n          { hasText && (\n            <VCardText key=\"text\">\n              { slots.text?.() ?? props.text }\n            </VCardText>\n          ) }\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          ) }\n\n          { genOverlays(isClickable.value, 'v-card') }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n"]},"metadata":{},"sourceType":"module"}