import { App, Ref } from 'vue';
import { createIntl } from '@formatjs/intl';

interface RtlOptions {
    rtl?: Record<string, boolean>;
}

interface LocaleMessages {
    [key: string]: LocaleMessages | string;
}
interface LocaleProps {
    locale?: string;
    fallbackLocale?: string;
    messages?: LocaleMessages;
}
interface LocaleInstance {
    current: Ref<string>;
    fallback: Ref<string>;
    messages: Ref<LocaleMessages>;
    t: (key: string, ...params: unknown[]) => string;
    n: (value: number) => string;
}
interface LocaleAdapter {
    createRoot: (app?: App) => LocaleInstance;
    getScope: () => LocaleInstance;
    createScope: (options?: LocaleProps) => LocaleInstance;
}

declare type VueIntlAdapterOptions = {
    createIntl: typeof createIntl;
    useIntl: any;
    provideIntl: any;
    locale: string;
    defaultLocale: string;
    messages: Record<string, Record<string, string>>;
} & RtlOptions;
/**
 * There is no reactivity in this adapter, because vue-intl package does not seem to support it
 */
declare function createVueIntlAdapter({ createIntl, useIntl, provideIntl, locale, defaultLocale, messages, ...rest }: VueIntlAdapterOptions): (LocaleAdapter & RtlOptions);

export { createVueIntlAdapter };
